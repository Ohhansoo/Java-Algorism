package com.algorism.numberTheory.euclidean;

import com.algorism.numberTheory.eulersPhi.EulersPhi_MyAnswer;

import java.io.IOException;

/**
 * 유클리드 호제법 : 두 수의 최대 공약수를 구하는 알고리즘
 *                일반적으로 최대 공약수를 구하는 방법은 소인수분해를 이용한 공통된 소수들의 곱으로 표현할 수 있지만
 *                유킬리드 호제법은 좀 더 간단한 방법을 제시
 * [MOD 연산으로 구현하는 유클리드 호제법]
 * 1. 큰 수를 작은 수로 나누는 MOD 연산을 수행
 * 2. 앞 단계에서의 작은 수와
 * */
public class Euclidean {
    public static void main(String[] args) throws IOException {
        Euclidean_MyAnswer myAnswer = new Euclidean_MyAnswer();

        //문제 1(07-2-042) : 최소 공배수 구현하기
        /************************************** 개 요 *************************************
         * 두 자연수 A와 B가 있을 때 A의 배수면서 B의 배수인 자연수를 A와 B의 공배수라고 한다.
         * 이런 공배수 중 가장 작은 수를 최소 공배수라고 한다.
         * */
        //입력 : 1번째 줄에 테스트 케이스의 개수 T(1 <= T <= 1,000)
        //      2번째 줄부터 T개의 줄에 걸쳐 A와 B가 주어진다(1 <= A,B <= 45,000)
        //출력 : 1번째 줄부터 T개의 줄에 A와 B의 최소 공배수를 입력받은 순서대로 1줄에 1개씩 출력한다.
        //[예제 입력1] : 3 // 테스트 케이스 개수
        //              1 45000 // A, B
        //              6 10
        //              13 17
        //[예제 출력1] : 45000
        //              30
        //              221

        System.out.println("문제 1(07-2-042) : 최소 공배수 구현하기");
        myAnswer.leastCommonMultiple();

        //문제 2(07-2-043) : 최대 공약수 구하기
        /************************************** 개 요 *************************************
         * 모든 자리가 1로만 이뤄진 두 자연수 A와 B가 주어져 있다. 이때 A와 B의 최대 공약수를 구하는 프로그램을 작성하시오.
         * 예를 들어 A가 111이고, B가 1111일 때 A와 B의 최대 공약수는 1이다. A가 111이고, B가 111111일 경우에는 최대 공약수가 111이다.
         * */
        //입력 : 500000000000000000 500000000000000002 // A와 B의 길이
        //출력 : 11

        System.out.println("문제 1(07-2-042) : 최소 공배수 구현하기");
        myAnswer.greatestCommonDivisor();

        //문제 3(07-2-044) : 칵테일 만들기
        /************************************** 개 요 *************************************
         * 총 재료 쌍 N-1개의 비율이 입력으로 주어질 때, 다음 조건을 만족하는 칵테일을 만드는 데 필요한 각 재료의 양을 구하는 프로그램을 만드시오.
         *  조건 1. 필요한 재료의 질량을 모두 더한 값이 최소가 되어야 한다.
         *  조건 2. 비율은 'a b p q'와 같은 형식으로 주어지는데, a번 재료의 질량을 b번 재료의 질량으로 나눈 값이 p / q 라는 뜻이다.
         * */
        //입력 : 1번째 줄에 august14를 만드는 데 필요한 재료의 개수 N이 주어지고, N은 10보다 작거나 같은 자연수다.
        //       2번째 줄부터 N-1개의 줄에는 재료 쌍의 비율이 1줄게 1개씩 주어지는데, 문제 설명에 나온 형식인 'a b p q'로 주어진다.
        //       재료는 0번부터 N-1까지고, a와 b는 모두 N-1보다 작거나 같은 자연수 또는 0이다.
        //       p와 q는 0보다 작거나 같은 자연수다.
        //출력 : 1번째 줄에 칵테일을 만드는 데 필요한 각 재료의 질량을 0번 재료부터 순서대로 공백으로 구분해 출력한다.
        //[예제 입력1] : 5 // 재료 개수
        //              4 0 1 1
        //              4 1 3 1
        //              4 2 5 1
        //              4 3 7 1
        //[예제 출력1] : 105 35 21 15 105
        System.out.println("문제 3(07-2-044) : 칵테일 만들기");
        myAnswer.makeCocktail();
    }
}
