package com.algorism.greedy;

import com.algorism.searching.binarySearch.BinarySearch_MyAnswer;

import java.io.IOException;

/**
 * 그리디 알고리즘 (탐욕법) : 현재 단계의 선택지 중에서 최선을 선택해나가다 보면,
 *                         결과가 최선일 것이라고 가정하는 알고리즘
 *                         결과가 항상 최선을 보장하지 않는다.
 * 1. 해선택 : 현재 단계에서 가장 최선의 해를 선택한다.
 * 2. 현재 선택한 선택지가 전체 문제의 제약 조건을 벗어나지 않는다.
 * 3. 해검사 : 결과가 전체 문제를 해결할 수 있는지 검사한다. 그렇지 못하면 1로 돌아가 반복한다.
 * */
public class Greedy {

    public static void main (String[] args) throws IOException {
        Greedy_MyAnswer myAnswer = new Greedy_MyAnswer();

        //문제 1(05-3-031) : 동전 개수의 최솟값 구하기
        /************************************** 개 요 *************************************
         * 준규가 소유하고 있는 동전은 총 N종류이고, 각 동전의 개수가 많다. 동전을 적절히 사용해 그 가격의 합을 K로 만들려고 한다.
         * 이 때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.
         * */
        //입력 : 1번째 줄에 N과 K(1 <= N <= 10, 1 <= K <= 100,000,000)
        //      2번째 줄부터 N개의 줄에 동전의 가격 A가 오름차순으로 주어진다
        //        (1 <= A <= 1,000,000, A1 = 1, i >= 2일 때 Ai는 Ai의 배수)
        //출력 : 1번째 줄에 K원을 만드는 데 필요한 동전 개수의 최솟값을 출력한다.
        //[예제 입력1] : 10 4200 // 동전 수, 목표 금액
        //              1
        //              5
        //              10
        //              50
        //              100
        //              500
        //              1000
        //              5000
        //              10000
        //              50000
        //[예제 출력1] : 6
        System.out.println("문제 1(05-3-031) : 동전 개수의 최솟값 구하기");
        myAnswer.findMinimumCoins();
    }
}
