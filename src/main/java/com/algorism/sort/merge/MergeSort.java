package com.algorism.sort.merge;

import java.io.IOException;

/**
 * 병합 정렬 : 분할 정복(divide and conquer)방식을 사용해 데이터를 분할하고 분할한 집합을 정렬하며 합치는 알고리즘.
 *           병합 정렬의 시간 복잡도 평균값은 O(nlogn)이다.
 * */
public class MergeSort {

    public static void main(String[] args) throws IOException {

        MergeSort_MyAnswer myAnswer = new MergeSort_MyAnswer();

        //문제 1(04-5-020) : 수 정렬하기 2
        /************************************** 개 요 *************************************
         * N개의 수가 주어졌을 때 이를 오름차순 정렬하는 프로그램을 작성하시오.
         * */
        //입력 : 1번째 줄에 N(1 <= N <= 1,000,000)
        //      2번째 줄부터 N개의 줄에 숫자가 주어진다. 이 수는 절대값이 1,000,000보다 작거나 같은 정수다. 수는 중복되지 않는다.
        //출력 : 1번째 줄부터 N개의 줄에 오름차순 정렬한 결과를 1줄에 1개씩 출력한다.
        //[예제 입력1] : 5 // 수의 개수
        //              5  4  3  2  1
        //[예제 출력1] : 1  2  3  4  5
        System.out.println("문제 1(04-5-020) : 수 정렬하기 2");
        //myAnswer.sortNumber();

        //문제 2(04-5-021) : 버블 소트 프로그램 2
        /************************************** 개 요 *************************************
         * 버블 소트는 서로 인접해 있는 두 수를 바꾸면서 정렬하는 방법이다. 예를 들어 수열이 3, 2, 1 이었다고 가정해보자.
         * 이 때는 인접해 있는 3, 2가 바뀌어야 하므로 2, 3, 1이 된다. 그 다음은 3, 1이 바뀌어야 하므로 2, 1, 3이 된다.
         * 그 다음에는 2, 1이 바뀌어야 하므로 1, 2, 3이 된다. 그러면 더 이상 바꿀 수 없으므로 정렬이 완료된다.
         * N개의 수로 이뤄진 수열 A[1], A[2], A[N]이 있다. 이 수열로 버블 소트를 수행할 때 swap이 총 몇 번 발생하는지 알아내는 프로그램을 작성하시오.
         * */
        //입력 : 1번째 줄에 N(1 <= N <= 500,000)
        //      2번째 줄에 N개의 정수로 A[1], A[2], ...A[N]이 주어진다. 각각의 A[i]는 0 <= |A[i]| <= 1,000,000,000의 범위에 들어 있다.
        //출력 : 1번째 줄에 swap 횟수를 출력한다.
        //[예제 입력1] : 8 // 수의 개수
        //              3  2  8  1  7  4  5  6
        //[예제 출력1] : 11
        System.out.println("문제 2(04-5-021) : 버블 소트 프로그램 2");
        myAnswer.sortProgram02();

    }

}
