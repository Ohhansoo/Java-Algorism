package com.algorism.sort.radix;

import java.io.IOException;

/**
 * 기수 정렬 : 값을 비교하지 않는 특이한 정렬
 *           값을 놓고 비교할 자릿수를 정한 다음 해당 자릿수만 비교한다.
 *           시간 복잡도는 O(kn)으로, 여기서 k는 데이터의 자릿수를 말한다.
 *           시간 복잡도가 가장 짧은 정렬로 데이터 개수가 많을 경우 고려해본다.
 * */
public class RadixSort {

    public static void main(String[] args) throws IOException {
        RadixSort_MyAnswer myAnswer = new RadixSort_MyAnswer();

        //문제 3(04-6-022) : 수 정렬하기 3
        /************************************** 개 요 *************************************
         * N개의 수가 주어졌을 때 이를 오름차ㅅ순 정렬하는 프로그램을 작성하시오.
         * */
        //입력 : 1번째 줄에 수의 개수 N(1 <= N <= 10,000,000)
        //      2번째 줄부터 N개의 줄에 숫자가 주어진다.
        //      이 수는 10,000보다 작거나 같은 자연수다.
        //출력 : 1번째 줄부터 N개의 줄에 오름차순 정렬한 결과를 1줄에 1개씩 출력한다.
        //[예제 입력1] : 11  215  15  344  372  294  100  8  145  24  198  831
        //
        //[예제 출력1] : 8  15  24  100  145  198  215  294  344  372  831
        System.out.println("문제 3(04-6-022) : 수 정렬하기 3");
        myAnswer.sortingNumbers03();
    }


}
